"""
Django settings for cfehome project.

Generated by 'django-admin startproject' using Django 4.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from decouple  import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('DJNAGO_SECRET_KEY') #envirnoment varibales

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DJANGO_DEBUG', cast= bool)

print("Debug ", DEBUG, type(DEBUG))

ALLOWED_HOSTS = [".railway.app"]
if DEBUG:
    ALLOWED_HOSTS+=[
        "127.0.0.1",
        'localhost'

    ]   


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'visits',
    'commando'
]

# INSTALLED_APPS+=[
#     'visits',
# ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cfehome.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cfehome.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Custom datbase has been set
CONN_MAX_AGE= config('CONN_MAX_AGE', cast=int, default= 30)
DATABASES_URl=  config('DATABASE_URL', cast= str)

if DATABASES_URl is not None:
    import dj_database_url
    DATABASES= {
        "default": dj_database_url.config(
            default= DATABASES_URl, 
            conn_max_age=CONN_MAX_AGE, 
            conn_health_checks= True,
            )
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_BASE_DIR= BASE_DIR / "staticfiles"
STATICFILES_VENDOR_DIR= STATICFILES_BASE_DIR /'vendors'

print('this is the template dolder ', STATICFILES_BASE_DIR)
print('this is static vendor folder', STATICFILES_VENDOR_DIR)
import os
if os.path.exists(STATICFILES_BASE_DIR) and os.path.isdir(STATICFILES_BASE_DIR):
    # List all files in the directory
    files = os.listdir(STATICFILES_BASE_DIR)
    
    if files:  # Check if the directory contains any files
        print("Files in the directory:")
        for file in files:
            print(file)
    else:
        print("The directory is empty.")
else:
    print(f"The directory {STATICFILES_BASE_DIR} does not exist.")


#Sources for python manage.py  collect static
STATICFILES_DIRS= [
    STATICFILES_BASE_DIR
]

# output for python manage.py  collectstatic
#local cdn

STATIC_ROOT= BASE_DIR / "local-cdn "

print('this is parent static_root', STATIC_ROOT)

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
